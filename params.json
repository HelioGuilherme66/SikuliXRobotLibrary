{"name":"Sikulixrobotlibrary","tagline":"SikuliX library for Robot Framework","body":"Custom SikuliX Library For Robot Framework\r\n==================================================\r\n\r\nTLDR\r\n-----------\r\nPrerequisites: java 8, jython, robotframework, jybot, sikulixapi.jar with tesseract\r\n\r\nSetup CLASSPATH AND JYTHONPATH in environment variables:\r\n\r\n      CLASSPATH = <path to sikulixapi.jar>\r\n      JYTHONPATH = <path to sikulixapi.jar>\\Lib;<path to sikulixapi.jar>\\org\r\n\r\nInstall the SikuliXRobotLibrary:\r\n\r\n      git clone https://github.com/jaredfin/SikuliXRobotLibrary.git\r\n      cd SikuliXRobotLibrary\r\n      jython setup.py install\r\n\r\nRun The Demo:\r\n\r\n      jybot -d LOGS -i Demotest demo\\calc_test_suite\r\n\r\nIntroduction\r\n------------\r\n\r\nSikuliXRobotLibrary is a gui recognition testing library for Robot Framework\r\nthat leverages the SikuliX version 1.1.0 methods.\r\n\r\nIt is modeled after the Selenium2Library library.\r\n\r\n- More information about this library can be found in the `Keyword Documentation`_.\r\n- Installation information is found in the `INSTALL.rst` file.\r\n\r\n\r\nDirectory Layout\r\n----------------\r\n\r\ndemo/\r\n    A simple demonstration, with calculator application in Windows 8\r\n\r\ndoc/\r\n    Keyword documentation\r\n\r\nsrc/\r\n    Python source code\r\n\r\n\r\nUsage\r\n-----\r\n\r\nTo write tests with Robot Framework and SikuliXRobotLibrary, \r\nSikuliXRobotLibrary must be imported into your Robot test suite.\r\nSee `Robot Framework User Guide`_ for more information.\r\n\r\nPreconditions\r\n-------------\r\n\r\nSikuliXRobotLibrary supports Jython interpreters supported by the\r\nRobot Framework.\r\n\r\nSikuliXRobotLibrary depends on a few other Jython libraries, including\r\nof course Robot Framework. All dependencies are declared in setup.py.\r\n\r\nSikuliX must be installed with the Tesseract based OCR features. When running the sikulixsetup-1.1.0.jar,\r\nmake sure to select the second and third options.\r\n\r\n\r\nInstalling from source\r\n----------------------\r\n\r\nThe source code can be retrieved either as a source distribution or as a clone\r\nof the main source repository. The installer requires Jython version 2.7 or\r\nnewer. Install by running:\r\n\r\n    jython setup.py install\r\n\r\nNote: In most linux systems, you need to have root privileges for installation.\r\n\r\nUninstallation is achieved by deleting the installation directory and its\r\ncontents from the file system. The default installation directory is\r\n`[JythonLibraries]/site-packages/robotframework_SikuliXRobotLibrary-1.0.0-py2.7.egg`.\r\n\r\n\r\nVerifying Installation\r\n----------------------\r\n\r\nOnce you have installed SikuliXRobotLibrary it is a good idea to verify the installation. To verify installation start jython::\r\n\r\n     C:\\> jython\r\n\r\nand then at the Jython prompt type::\r\n\r\n    >> import SikuliXRobotLibrary\r\n    >>\r\n\r\nIf the jython command line interpretor returns with another prompt ('>>' as shown above) then your installation was successful.\r\n\r\nTroubleshooting Installation\r\n----------------------------\r\n\r\nThe most common issue with installing SikuliXRobotLibrary is missing dependencies. An error like::\r\n\r\n    ImportError: No module named sikuli\r\n\r\nindicates that you are missing the sikulixapi.jar package.  To correct this problem, install the sikulixapi.jar with tesseract\r\nthen add the following in the environment variables::\r\n\r\n      CLASSPATH = <path to sikulixapi.jar>\r\n      JYTHONPATH = <path to sikulixapi.jar>\\Lib\r\n\r\nSimilarly if you receive \"No module named ...\" error message then you have another missing dependency.  To correct, use easy_install to install the missing package.\r\n\r\n.. _pip: http://www.pip-installer.org\r\n.. _easy_install: http://pypi.python.org/pypi/setuptools\r\n\r\nRunning the Demo\r\n----------------\r\n\r\nThe demo directory contains an easily executable demo for Robot Framework\r\nusing SikuliXRobotLibrary. To run the demo, run::\r\n\r\n    jybot -d <output directory> -i <tag> <suite directory>\r\n\r\nE.g.::\r\n\r\n    jybot -d C:\\SikuliXRobotLibrary\\demo\\logs -i Demotest C:\\SikuliXRobotLibrary\\demo\\calc_test_suite\r\n    Note: C:\\SikuliXRobotLibrary\\demo\\logs will be automatically created upon running the script\r\n\t\r\n\r\nKeyword Documentation\r\n---------------------- \r\nhttps://pybot.wordpress.com/2015/10/31/sikulixrobotlibrary-keyword-documentation/\r\n\r\nRobot Framework User Guide\r\n---------------------- \r\nhttp://code.google.com/p/robotframework/wiki/UserGuide\r\n\r\n\r\nELI5 Installation Instructions (Windows 7 or 8)\r\n------------------------------\r\n\r\n1. Install Java 8. \r\n\r\n  Link: http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html\r\n\r\n  i. Run java -version in command prompt, java version should be displayed, otherwise, add C:\\Program Files\\Java\\jre<version>\\bin in Environment Variable\r\n\r\n2. Install Jython 2.7:\r\n\r\n  Link: http://www.jython.org/downloads.html\r\n\r\n  i. Download the installer then make sure to accept the license agreement during installation\r\n\r\n  ii. Add 'C:\\jython2.7.0\\bin' in Environment variables\r\n\r\n  iii. Check if jython is installed, run 'jython --version' command in command prompt, if successful, the following will be displayed\r\n\r\n        Jython 2.7.0\r\n\r\n3. Install Robotframework from the source:\r\n\r\n  Link: https://pypi.python.org/pypi/robotframework\r\n\r\n  i. Download and extract the rf source (robotframework-2.9.2.tar.gz (md5)) to a local directory\r\n\r\n  ii. cd to the extracted directory where `setup.py` is located\r\n\r\n  iii. Open a command prompt and run: \r\n\r\n      jython setup.py install\r\n\r\n      * jybot.bat will be created in C:\\jython2.7.0\\bin\r\n      * C:\\jython2.7.0\\Lib\\site-packages\\robotframework-2.9.2-py2.7.egg will be created\r\n\r\n  iv. Run jybot --version in command prompt, if successful, the following will be displayed:\r\n\r\n      Robot Framework 2.9.2 (Jython 2.7.0 on java1.8.0_60)\r\n\r\n4. Install SikuliX v1.1.0.\r\n\r\n  Link: https://launchpad.net/sikuli/sikulix/1.1.0\r\n\r\n  i. Download sikulixsetup-1.1.0.jar (md5) in a local directory\r\n\r\n    * C:\\SikuliX1.1.0\r\n\r\n  ii. Double-click the sikulixsetup-1.1.0.jar file\r\n\r\n  iii. Once the dialog for installation is launched, select options 2 and 3, i.e. Pack 2 and the tesseract (you may opt to install the IDE option 1 later, but backup the sikulixapi.jar first)\r\n\r\n      * if sucessful, the sikulixapi.jar will be created (must be 24-25MB in size otherwise, there may be some missing files if a smaller jar file is created)\r\n\r\n5. Add CLASSPATH: C:\\SikuliX1.1.0\\sikulixapi.jar and JYTHONPATH: C:\\SikuliX1.1.0\\sikulixapi.jar\\Lib in Environment Variables.\r\n\r\n  i. Right-click > My Computer > Properties > Advanced system settings > Environment Variables\r\n\r\n  ii. Click New button. In Variable Name field, type CLASSPATH and in Variable Value, type C:\\SikuliX1.1.0\\sikulixapi.jar\r\n\r\n  iii. Do the same thing for JYTHONPATH\r\n\r\n6. Install SikuliXRobotLibrary from source.\r\n\r\n  Link: https://github.com/jaredfin/SikuliXRobotLibrary\r\n\r\n  i. Do the following in command prompt:\r\n\r\n      cd C:\\\r\n      git clone https://github.com/jaredfin/SikuliXRobotLibrary.git\r\n      cd SikuliXRobotLibrary\r\n      jython setup.py install\r\n\r\n      * see https://github.com/jaredfin/SikuliXRobotLibrary for more installation instructions and troubleshooting\r\n\r\n7. Run the demo calculator test suite.\r\n\r\n  i. Do the following in command prompt:\r\n\r\n      cd C:\\SikuliXRobotLibrary\r\n      jybot -d LOGS -i DemoTest demo\\calc_test_suite\r\n\r\n      * if successful, this should run the following test:\r\n\r\n      ---------------------------------------------------------------------\r\n      * Main Test file: CalculatorTest.robot\r\n\r\n      *** Settings ***\r\n      Documentation     Calculator test suite for the common operations. Does not use patterns as parameters in the keywords but uses offsets of regions instead\r\n      Resource          CalculatorTestGivenWhenThen.robot\r\n      Test Setup        Open \"Calculator\" Application\r\n      Test Teardown     Close \"Calculator\" Application\r\n      Default Tags      CalculatorTest    DemoTest\r\n      Test Template     Functionality Test\r\n\r\n      *** Test Cases ***    NUM1    OPERATION    NUM2    EXPECTED RESULT\r\n      12 + 100 = 112         12     Plus         100       112\r\n      9 + 9 = 18              9     Plus           9        18\r\n      112 - 100 = 12        112     Minus        100        12\r\n      119 - 9 = 110         119     Minus          9       110\r\n      100 / 2 = 50          100     Divide         2        50\r\n      1 / 4 = 0.25            1     Divide         4      0.25\r\n      10 * 100 = 1000        10     Times        100      1000\r\n      2 * 9 = 18              2     Times          9        18\r\n\r\n      *** Keywords ***\r\n      Functionality Test\r\n          [Arguments]    ${num1}    ${operation}    ${num2}    ${expected_result}\r\n          Given User Calculates \"${num1}\" \"${operation}\" \"${num2}\"\r\n          When User Clicks \"Equals\" Button\r\n          Then Actual Result Should Be Equal To \"${expected_result}\"\r\n\r\n      ---------------------------------------------------------------------\r\n      * The SikuliXRobotLibrary library is set in the resource: CalculatorTestGlobalHelpers.robot\r\n\r\n      *** Settings ***\r\n      Library           SikuliXRobotLibrary\r\n\r\n![RobotFramework Results Log](https://github.com/jaredfin/SikuliXRobotLibrary/raw/master/doc/sample_log.png)\r\n\r\nAdditional Notes: \r\n-----------------\r\nSikulix's OCR is still not that perfect in recognizing texts yet, the demo test case only includes more than 1 digit on expected results, single digits and repeating digits like 4444 seems to not return any texts when read by the OCR. you may play with the test cases by assigning different values in the arguments of the test cases\r\n\r\nSikuliX takes over the mouse pointer and keyboard control, you may opt to setup the scripts in another node in Jenkins then run it remotely.\r\n\r\nFor capturing, slicing images and calculating the offset values of x, y, w and h, I am using:\r\npicpick: http://ngwin.com/picpick\r\n\r\nOther similar tools for image capture and offset value calculations respectively are:\r\nIrfanView: http://www.irfanview.com/\r\npixel-ruler online tool: http://www.rapidtables.com/web/tools/pixel-ruler.htm\r\n\r\n--------------------------------------\r\n\r\nCreated by Francis John P. Agunday","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}